// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SerializedClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class EventModel
    {
        /// <summary>
        /// Initializes a new instance of the EventModel class.
        /// </summary>
        public EventModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EventModel class.
        /// </summary>
        /// <param name="eventType">The domain event type, eg. PaymentProcessed
        /// or OrderPlaced.</param>
        /// <param name="eventId">Optional eventId. Will be generated if
        /// omitted.</param>
        /// <param name="data">Optional user defined event data map</param>
        /// <param name="encryptedData">Optional client-side encrypted payload.
        /// Max 65535 bytes.</param>
        public EventModel(string eventType, System.Guid? eventId = default(System.Guid?), object data = default(object), string encryptedData = default(string))
        {
            EventId = eventId;
            EventType = eventType;
            Data = data;
            EncryptedData = encryptedData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets optional eventId. Will be generated if omitted.
        /// </summary>
        [JsonProperty(PropertyName = "eventId")]
        public System.Guid? EventId { get; set; }

        /// <summary>
        /// Gets or sets the domain event type, eg. PaymentProcessed or
        /// OrderPlaced.
        /// </summary>
        [JsonProperty(PropertyName = "eventType")]
        public string EventType { get; set; }

        /// <summary>
        /// Gets or sets optional user defined event data map
        /// </summary>
        [JsonProperty(PropertyName = "data")]
        public object Data { get; set; }

        /// <summary>
        /// Gets or sets optional client-side encrypted payload. Max 65535
        /// bytes.
        /// </summary>
        [JsonProperty(PropertyName = "encryptedData")]
        public string EncryptedData { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (EventType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EventType");
            }
            if (EventType != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(EventType, "^[a-zA-Z0-9]+[a-zA-Z0-9\\-_]+[a-zA-Z0-9]+$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "EventType", "^[a-zA-Z0-9]+[a-zA-Z0-9\\-_]+[a-zA-Z0-9]+$");
                }
            }
        }
    }
}
