// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SerializedClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class AggregateSummary
    {
        /// <summary>
        /// Initializes a new instance of the AggregateSummary class.
        /// </summary>
        public AggregateSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AggregateSummary class.
        /// </summary>
        public AggregateSummary(System.Guid? aggregateId = default(System.Guid?), string aggregateType = default(string), int? aggregateVersion = default(int?), long? lastUpdatedAt = default(long?))
        {
            AggregateId = aggregateId;
            AggregateType = aggregateType;
            AggregateVersion = aggregateVersion;
            LastUpdatedAt = lastUpdatedAt;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "aggregateId")]
        public System.Guid? AggregateId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "aggregateType")]
        public string AggregateType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "aggregateVersion")]
        public int? AggregateVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastUpdatedAt")]
        public long? LastUpdatedAt { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AggregateType != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(AggregateType, "^[a-z0-9]+[a-z0-9\\-_]+[a-z0-9]+$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "AggregateType", "^[a-z0-9]+[a-z0-9\\-_]+[a-z0-9]+$");
                }
            }
        }
    }
}
