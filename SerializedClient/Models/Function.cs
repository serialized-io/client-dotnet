// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SerializedClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Function
    {
        /// <summary>
        /// Initializes a new instance of the Function class.
        /// </summary>
        public Function()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Function class.
        /// </summary>
        /// <param name="functionProperty">The name of the function to
        /// apply</param>
        /// <param name="targetSelector">The selector for the target of the
        /// function</param>
        /// <param name="eventSelector">The selector for the event data to use
        /// as source</param>
        /// <param name="rawData">The raw data to use as input to the function,
        /// if applicable</param>
        /// <param name="targetFilter">The target filter determining which
        /// state the projection should be for the event to be applied</param>
        /// <param name="eventFilter">Filter for the events, determining for
        /// which events the function should be applied</param>
        public Function(string functionProperty, string targetSelector = default(string), string eventSelector = default(string), object rawData = default(object), string targetFilter = default(string), string eventFilter = default(string))
        {
            FunctionProperty = functionProperty;
            TargetSelector = targetSelector;
            EventSelector = eventSelector;
            RawData = rawData;
            TargetFilter = targetFilter;
            EventFilter = eventFilter;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the function to apply
        /// </summary>
        [JsonProperty(PropertyName = "function")]
        public string FunctionProperty { get; set; }

        /// <summary>
        /// Gets or sets the selector for the target of the function
        /// </summary>
        [JsonProperty(PropertyName = "targetSelector")]
        public string TargetSelector { get; set; }

        /// <summary>
        /// Gets or sets the selector for the event data to use as source
        /// </summary>
        [JsonProperty(PropertyName = "eventSelector")]
        public string EventSelector { get; set; }

        /// <summary>
        /// Gets or sets the raw data to use as input to the function, if
        /// applicable
        /// </summary>
        [JsonProperty(PropertyName = "rawData")]
        public object RawData { get; set; }

        /// <summary>
        /// Gets or sets the target filter determining which state the
        /// projection should be for the event to be applied
        /// </summary>
        [JsonProperty(PropertyName = "targetFilter")]
        public string TargetFilter { get; set; }

        /// <summary>
        /// Gets or sets filter for the events, determining for which events
        /// the function should be applied
        /// </summary>
        [JsonProperty(PropertyName = "eventFilter")]
        public string EventFilter { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FunctionProperty == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FunctionProperty");
            }
        }
    }
}
