// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SerializedClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// See documentation for details on which field combinations are valid:
    /// https://docs.serialized.io/api-reference/apis/reactions
    /// </summary>
    public partial class Action
    {
        /// <summary>
        /// Initializes a new instance of the Action class.
        /// </summary>
        public Action()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Action class.
        /// </summary>
        /// <param name="actionType">Possible values include: 'HTTP_POST',
        /// 'SLACK_POST', 'IFTTT_POST', 'AUTOMATE_POST', 'ZAPIER_POST'</param>
        /// <param name="signingSecret">The secret key used to HMAC sign the
        /// requests.</param>
        /// <param name="httpHeaders">Optional headers</param>
        /// <param name="targetUri">The endpoint URI to call.</param>
        public Action(string actionType, string signingSecret = default(string), object httpHeaders = default(object), string targetUri = default(string), object body = default(object), object valueMap = default(object))
        {
            ActionType = actionType;
            SigningSecret = signingSecret;
            HttpHeaders = httpHeaders;
            TargetUri = targetUri;
            Body = body;
            ValueMap = valueMap;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'HTTP_POST', 'SLACK_POST',
        /// 'IFTTT_POST', 'AUTOMATE_POST', 'ZAPIER_POST'
        /// </summary>
        [JsonProperty(PropertyName = "actionType")]
        public string ActionType { get; set; }

        /// <summary>
        /// Gets or sets the secret key used to HMAC sign the requests.
        /// </summary>
        [JsonProperty(PropertyName = "signingSecret")]
        public string SigningSecret { get; set; }

        /// <summary>
        /// Gets or sets optional headers
        /// </summary>
        [JsonProperty(PropertyName = "httpHeaders")]
        public object HttpHeaders { get; set; }

        /// <summary>
        /// Gets or sets the endpoint URI to call.
        /// </summary>
        [JsonProperty(PropertyName = "targetUri")]
        public string TargetUri { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "body")]
        public object Body { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "valueMap")]
        public object ValueMap { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ActionType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ActionType");
            }
        }
    }
}
