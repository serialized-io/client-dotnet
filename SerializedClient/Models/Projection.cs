// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SerializedClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Projection
    {
        /// <summary>
        /// Initializes a new instance of the Projection class.
        /// </summary>
        public Projection()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Projection class.
        /// </summary>
        /// <param name="projectionId">The projection id. Will be a UUID if
        /// type 'single' and a string if type 'aggregated'.</param>
        /// <param name="createdAt">Entry created timestamp</param>
        /// <param name="updatedAt">Entry updated timestamp</param>
        public Projection(string projectionId, object data, long? createdAt = default(long?), long? updatedAt = default(long?))
        {
            ProjectionId = projectionId;
            CreatedAt = createdAt;
            UpdatedAt = updatedAt;
            Data = data;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the projection id. Will be a UUID if type 'single' and
        /// a string if type 'aggregated'.
        /// </summary>
        [JsonProperty(PropertyName = "projectionId")]
        public string ProjectionId { get; set; }

        /// <summary>
        /// Gets or sets entry created timestamp
        /// </summary>
        [JsonProperty(PropertyName = "createdAt")]
        public long? CreatedAt { get; set; }

        /// <summary>
        /// Gets or sets entry updated timestamp
        /// </summary>
        [JsonProperty(PropertyName = "updatedAt")]
        public long? UpdatedAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "data")]
        public object Data { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ProjectionId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ProjectionId");
            }
            if (Data == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Data");
            }
        }
    }
}
